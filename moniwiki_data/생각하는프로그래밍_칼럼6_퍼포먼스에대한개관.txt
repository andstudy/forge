Describe 생각하는프로그래밍_칼럼6_퍼포먼스에대한개관 here

= 2부의 내용 =
칼럼 6. 퍼포먼스에 대한 개관
칼럼 7. 봉투 뒷면에 하는 간단한 계산
칼럼 8. 알고리즘 디자인 기법
칼럼 9. 코드 튜닝

{{{ 
퍼포먼스(효율성) 향상을 위한 여러가지(Level) 접근방법 

[왜 해야하나??]
* 속도가 중요한 경우 (ex. 월말정산 프로그램의 야간작업)
* 알고리즘 트레이닝 -> 교육효과
* 그냥 무조건 빠른게 좋다! 

싼 장비로 빨리 결과를 얻으면 좋다.
}}} 


= 6.1 사례 연구 =

Andrew Appel "다체 운동 시뮬레이션을 위한 효율적인 프로그램"

||'''디자인 수준'''||'''속도개선 비율'''||'''수정 사항'''||
||알고리즘과 데이터 구조||12||이진트리를 사용하여 O(n^2) 에서||
|| || ||O(n log n)으로 단축||
||알고리즘 튜닝||2||더 큰 시간 간격을 사용||
||데이터 구조 재구성||2||트리 알고리즘에 적합한 클러스터 생성||
||시스템 독립적인 코드 튜닝||2||배정도 부동소수점 수 대신||
|| || ||단정도 부동소수점 수를 사용||
||시스템 종속적인 코드 튜닝||2.5||중요 함수를 어셈블리어로 재작성||
||하드웨어||2||부동소수점 연산 가속기 사용||


= 6.2 디자인 수준 = 
Level : High -> Low

1) 문제정의
    ex.)입력값들을 하나로 묶음.
2) 시스템구조
    시스템을 디자인할 때에 퍼포먼스를 분석하라.
3) 알고리즘과 데이터 구조
    모듈을 빠르게 만드는 핵심
4) 코드 튜닝
    [칼럼9]참조
5) 시스템 소프트웨어
    데이터베이스, 운영체제, 컴파일러의 최적화 옵션 활성화
6) 하드웨어
    가속기


= 6.3 원리 = 

 * Simple is Best!
 * 2080법칙
  2080법칙은 이탈리아 경제학자 파레토가 말한 것으로 '전체 결과의 80%는 전체 원인
 중 20%에서 비롯됐다' 는 법칙이다. 
  즉 부, 노력, 투입량, 원인의 작은 부분이 대부분의 부, 성과, 산출량, 결과를 이루
 어 낸다는 것이다. 20%의 소비자가 전체 매출의 80%를 차지하는 경향, 국민의 20%가 전
 체 부(富)의 80%를 차지하는 경향, 직장에서 20%의 근로자가 80%의 일을 하는 경향 등
 이 그것이다.
 * 독립된 여러수준을 고려해 보라.
