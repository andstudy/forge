[http://gamedeveloper.texterity.com/gamedeveloper/201205?pg=27#article_id=161235 원문]

[http://apps.facebook.com/playadventureworld Indiana Jones Adventure World]

2010 년 여름은 소셜 게임의 영역이 게임플레이, 스토리, 가치 면에서 점점 확장되던 시기였다. 새로 생긴 Zynga Boston 스튜디오도 Indiana Jones Adventure World(이하 IJAW) 로 이런 활기를 이어가고 싶었다. 우리의 목표는 전통적인 액션 어드벤처 게임 요소를 소셜 게임에 도입하는 것이었다. Zynga Boston 는 2010년 8월 Conduit Labs 를 합병하면서 생긴 스튜디오로 Harmonix, Turbine, Insomniac 출신 개발자들과 웹, 그외 다른 기술 기반의 개발자들로 구성되어 있다. 

Indiana Jones Adventure World 는 2011년 9월 9일에 출시되었다. 지난 몇 달간 200 여개 국에서 2천 8백만 이상의 유저들이 플레이했다. 출시 이후 20 개의 스토리를 추가했고 유저들은 7억 5천만 마리 이상의 뱀을 채찍으로 잡았고 180 억개 이상의 유물을 복구했다. 이정도라면 인디아나 존스 박사로 놀랐을 거라고 생각한다.

잘된 점

1. Prototyping
우리의 목표는 IJAW 에 소셜게임에서는 새로운 게임 형식을 도입함으로서 소셜 게임을 한 단계 진보시키는 것이었다. '젤다의 전설 : 시간의 오카리나' 나 '툼레이더' 같은 액션 어드벤처 게임의 재미를 마우스 한 번 클릭으로 진행하는 소셜 게임 유저들에게 전달하고 싶었다. 먼저 간단하지만 즐거운 전투를 도입하고 싶었다. 하지만 Zynga 의 핵심 디자인 가치 중의 하나가 '절대로 유저를 처벌하지 않는다' 였기 때문에 쉬운 일이 아니었다. 게임에 처음 들어간 '벌레(beastie)'은 간단한 애니메이션과 함께 전혀 반격하지 않는 장애물이었다. 우리는 인터렉션을 좀더 의미있고 재미있게 만들고 싶었기 때문에 프로토타입을 만들기 시작했다.

디자인팀은 은신, 회피, 시간차 스킬 같은 여러 메커니즘을 테스트하기 시작했다. 실시간 이동, 턴제 이동도 프로토타이핑 해 보고, 수십 개의 다른 이동 규칙과 UI 를 시험해봤다. 퍼즐기반 전투와 함께 여러 이질적인 아이디어들을 묶었을 때 문제되는 부분이 없는지 시도해 봤다. 그 좋은 예가 "탱크 벌레(beastie)"이다.

IJAW 는 플레이어가 타일을 지나갈 때마다 한 턴씩 넘어가는 턴제 게임이다. 우리는 플레이어의 턴 횟수에 따라 벌레들이 서로 다른 비율로 이동, 회전, 공격하도록 디자인했다("탱크 벌레"는 천천히 회전하지만 큰 피해를 준다). 이렇게 만들어 놓고 보니 벌레가 이동, 회전, 공격하려고 할 때 플레이어에게 미리 알려줄 방법이 필요했다. 또한 위험 거리를 만들어 벌레에게서 물러나면 벌레가 멈출 수 있게 만들어야 했다. 이런 방식은 너무 복잡했고 유저들이 다 이해했다한들 딱히 재미있지도 않았다.

프로토타입을 만들면 회사사람을 앉혀놓고 플레이테스트를 받는다. 게임 디자인이 얼마나 쉽게 이해되고 플레이하기 쉬운지, 또한 얼마나 재미있고 깊이가 있는지를 확인한다. 우리는 전투를 게임의 핵심요소로 만들고 싶었다. 심지어 한번도 게임에서 전투를 경험해 보지 못한 사람에게도 말이다. 결국 크리티컬, 회피, 무기 업그레이드 같은 간단한 메커니즘 몇 개로 전투 디자인이 결정되었다. 플레이어가 피해를 받게 되면 일정량의 에너지를 잃게 했는데, 이런 결정은 '절대 플레이어를 처벌하지 않는다'는 디자인 가치와는 반대되는 것이었지만 이것 없이는 유저들에게 공정함과 능숙해짐이라는 느낌을 줄 수 없었다.

교훈 : 혁신은 종이로 만들어지지 않는다. 최대한 많이 프로토타이핑을 해라.

2. Constant Focus Testing

디자이너와 포커스 테스팅은 애증관계다. 디자이너 입장에서는 혼을 쏟아 만든 게임을 플레이어들이 버벅거리거나 별로라고 평하는 것을 지켜보기가 쉽지 않다. 우리는 Zynga Player Insights 팀의 도움을 받아 매 4-6주마다 플레이테스트를 하기로 했다. 테스트는 '처음 해 보는 유저 경험 테스트'(first-time-user experience testing (FTUE) 와 '도움 없이 진행하는 테스트'로 나뉘었다.

FTUE 포커스 테스트에서는 플레이어들이 도움을 받아가며 첫 몇 개의 맵을 플레이한 후에 설문에 답한다. 테스트 때에는 개발팀 한 명이 옆에 앉아서 플레이어의 바디랭귀지를 살피고, 다른 디자인 팀원들은 화면을 통해서 플레이를 지켜본다. 타겟 유저에 맞는 사람들 중에서도 다양한 사람들을 대표할 수 있는 사람들을 테스터로 데려왔다. 테스트 기간 중에는 15명의 테스터가 월, 수, 금에 오고, 테스트 동안에는 디자이너와 엔지니어 모두가 사용성 문제나 버그를 바로 대처할 수 있도록 대기시켰다.

'도움 없이 진행하는 테스트' 는 여러 사람들이 도움 없이 1시간 동안 플레이를 한 뒤에 설문에 답했다. 이를 통해서 우리 게임의 전반적인 느낌과 무엇이 가장 좋고 나쁜지, 유저들이 어떤 점을 가장 원하는지를 알 수 있었다. 덕분에 게임을 좀더 흥미롭게 만들 수 있었고 전투와 퍼즐의 난이도를 조절할 수 있었다.

테스트는 개발자에게는 당연하게 생각되는 부분도 다시 한번 확인할 수 있게 해 줬다. IJAW 는 Zynga 에서 처음으로 높이 개념을 추가한 게임이다. 이렇다보니 쿼터뷰 게임에서 높이 개념과 클릭하는 법, 카메라를 이동하는 법을 유저들에게 어떻게 알려줘야 할지를 제대로 모르고 있다는 것을 알게 되었다.

교훈 : 포커스 테스터들이 힘들어 하는 것을 잘 살피고 그들이 느끼는 것을 같이 느낄 수 있도록 노력하라. 게임이 준비가 덜 되었다고 해도 최대한 빨리, 자주 테스트하라. 피드백이 생생할 때 바로 대응하라. 포커스 테스트는 언제든지 또 할 수 있다.

3. Design through Iteration

처음부터 소셜 어드벤처 게임을 완벽하게 만들 수 있을 거란 기대를 하지 않았기 때문에 1주일 단위의 스프린트로 빠르게 핵심 게임플레이와 콘텐트를 개발하고 포커스 테스트로부터 피드백을 받았다. FTUE 를 시작한 이후로는 FTUE 를 가장 중요하게 생각했지만 동시에 재미요소와 핵심을 찾으려고 계속 노력했다. 첫 번째 맵에서 몇 달을 반복개발하고 몇 번이나 뒤집어 엎어야 했다. 이 기간동안 우리 게임의 디자인 가치를 계속 고민하고 FTUE 를 통해서 어떻게 유저들에게 소셜 어드벤처 게임을 소개하고, 혁신적인 스토리와 게임플레이를 제공할 수 있을지 알 수 있었다.

첫 번째 맵인 Upper Jungle 은 개발 기간동안 600 번 가까이 변경되었다. 많은 경우는 포커스 테스트 결과를 보고 맵을 변경했지만, 디자인 팀에서 맵을 더 쉽게 만들고 게임흐름을 매끄럽게 하기 위해서 맵을 바꾸기도 했다. 때때로 맵을 근본적으로 바꿔야 할 때도 있었다. 예를 들어 처음에는 광대한 오픈맵으로 레벨를 디자인했지만 나중에는 여러 던전으로 변경했다.

교훈 : 빠르게 반복개발할 수 있도록 팀을 조직하라. 한 번에 잘 만들 수 없다. 최고의 디자이너들은 타고 난 게 아니라 반복을 통해 배운다.

4. Technology

소셜 게임은 Facebook 플랫폼이 2007 년 나온 이후로 쭉 발전해왔다. 초기 소셜 게임에 허락된 플랫폼과 기술기반은 그래픽 품질과 성능에 있어서 제한이 많았다. 우리는 새로 만드는 소셜 게임에서 전통적인 AAA 콘솔 게임에서나 기대할만한 그래픽 수준을 보여주고 싶었다. 또한 어셋, 콘텐트 개발용 툴셋을 구축해 콘텐트 디자이너와 아티스트에게 제공하고 싶었다.

원하는 대규모 레벨과 게임플레이를 지원할 수 있는 새로운 엔진을 개발하기로 했다. 게임 플레이 경험의 품질을 최우선으로 생각했기 때문에 이 부분은 엔지니어링이나 디자인 결정사항에서 최우선으로 다뤄졌다. 이런 노력은 보상을 받았다. IJAW 는 최고의 프레임레이트와 최소 로딩타임을 보여줄 수 있었다. "BRO"(Boston Rendering Optimization) 엔진은 Cityville 이나 Castleville 같은 다른 Zynga 게임에도 도입되었다.

콘텐트가 주가 되는 게임을 만들었기 때문에 디자이너들이 빠르고 쉽게 콘텐트를 만들 수 있는 툴이 필요헀다. 이런 것은 MMO 개발에서는 당연한 일이지만 소셜게임에서는 이제까지는 그렇지 않았다. 결국 월드 에디터를 만들어 디자이너들이 빠르게 새로운 맵을 만들 수 있게 했다. 

교훈 : 기술과 툴에 투자하라. 소셜 게임은 단순하고 가볍지만, 소셜 게임을 돌아가게 하는 기술은 만만하지 않다.

5. Indiana Jones

처음에는 Adventure World 로 출시할 예정이었으나 인디아나 존스 IP 를 가져올 수 있었다. 우리에게는 굉장한 기회였지만 핵심 네러티브와 디자인을 확 바꿔야 하는 문제가 있었다. 일단 이런 문제를 해결하고 나니 인디아나 존스 IP 는 게임과 개발팀 모두에게 큰 도움이 되었다. 우리는 금방 새로운 개발 프로세스에 익숙해졌고, 인디아나 존스 캐릭터와 영화 시리즈 물을 가져다 쓰기 시작했다.

라이센스 문제는 어려웠지만, 성공적이었다. 먼저 게임의 브랜드 인지도가 높아졌다. 소셜 게임 바닥이 워낙 경쟁이 치열해서 이런 인지도는 게임에 큰 도움이 되었다.

또한 인디아나 존스 이야기는 캐릭터나 이야기의 깊이가 있고 열성적인 팬들도 많아 좋았다. 우리 역시 인디아나 존스의 팬으로서 캐릭터가 이야기를 진행하게 하는 걸 굉장히 즐겼다. 

교훈 : 좋은 라이센스는 소셜 게임 브랜드와 플레이어들의 충성도를 높혀준다.

아쉬웠던 점

1. Innovate Everywhere

IJAW 의 목표는 게임플레이의 혁신을 통해 소셜 어드벤처 게임이라는 새로운 장르를 개척하는 것이었다. 결론적으로 굉장히 힘든 일이었다. 모든 메커니즘, UI, 아이디어를 혁신하려 했는데, 막상 소셜 게임 플레이어들은 여러 게임에서 일관되게 보여지는 (익숙한) 게임플레이를 기대하고 있었다는 점에서 위험한 발상이었다.

수집 시스템이 가장 대표적인 희생물이었다. 수집 시스템에 여러가지 시도를 해 보았다. 처음에는 "발견" 이라고 이름으로 만들었는데 일반적인 수집 시스템이었다. 플레이어가 '발견'을 하게되면 발견물에 이름을 지어주고 친구들에게 이를 공유할 수 있는 식이었다. 이런 추가적인 기능은 발견 시스템의 범위를 넓혔고 재미있는 기능들을 붙일 수 있었지만, 시스템 자체만 놓고보면 그다지 보상받았다는 느낌을 주지 못했고, 발견과 발견물 사이의 관계도 불분명했다. 결국에는 전통적인 수집 메커니즘만 남겨두고 '발견'시스템 전체를 들어내기로 했다. 힘들게 만든 피처를 들어내는 것은 게임 개발 과정에서 딱히 새로운 얘기가 아니지만 우리는 이런 들어내기 과정을 거의 모든 영역(심지어 딱히 그럴 필요도 없는 퀘스트 구조 같은 곳)에까지 해야 했다. 이러다보니 나중에는 Mastery 피처 같이 혁신을 해야 하지만 시간이 충분치 않은 문제까지 생겼다.

교훈 : 몇몇 핵심 영역에만 혁신과 연구에 집중하라. 모든 것을 전부 조금씩 더 낫게 만들기 보다는 일부를 훨씬 뛰어나게 만들어라. [http://parkpd.egloos.com/3888113 Rift(리프트)의 포스트모템 중에서 잘된 점 4번. Scope: Control it, or be controlled 과 비교해보라.]

2. Single Session Focus

소셜 게임은 몇 달, 몇 년간 서비스 해야 한다는 점이 어려운데, 우리는 싱글플레이에서 얼마나 재미있는지를 집중해서 개발하는 바람에 베타 서비스 직전까지 전체가 제대로 돌아가는 버전으로 테스트 해 보지 못했다. 즉, 멀티플레이 기능 테스트를 너무 늦게 시작했다.

싱글 플레이에서는 재미있게 만들었지만, 소셜 게임은 전통적인 MMO 처럼 디자인되고 플레이되기 때문에 내일 또 하고 싶게 만들어야 한다. 이런 걸 "유지(retention)" 라고 하는데 게임을 출시한 이후에 지키기가 굉장히 어려운 부분이다. (일부 게임에서는 약속 메커니즘을 이용해 '유지' 문제를 해결한다.) IJAW 에서는 모험에 시간 제한을 둠으로서 유지 문제를 해결할 수 있을 거라고 생각했다.

우리는 플레이어에게 딱 적당한 수의 모험을 제공하고, 언제든지 모험을 중단할 방법을 제공하려고 했다. 문제는 재미를 테스트할 때에는 항상 에너지 무한대 상태로 싱글플레이로 테스트를 하다보니 실제 서비스 상태에서는 제대로 테스트를 해 보지 못했다는 점이다. 즉, 실제 유저 입장에서 한 번에 얼마나 모험을 진행할 수 있는지, 다시 모험을 할 수 있는 타이머가 적당한지를 전혀 느껴보지 못했다.

우리가 실제로 "서비스 상태로" 플레이해 보니 모험에 걸려있는 타이머가 꽤나 불만스럽다는 것을 알게 되었다. 하지만 이 타이밍에 맞춰서 핵심 플레이 루프가 디자인되었기 때문에 그대로 둬야 했다.

교훈 : 게임을 몇 달 이상 서비스 할 생각이라면 서비스 상태에 맞춰서 플레이테스트를 하거나 적어도 충분한 기간동안 실제처럼 테스트를 해서 느낌을 확인하라.

3. Not Enough Beta

IJAW 의 베타서비스 기간은 너무 짧았고, 너무 일렀다. 베타서비스가 시작되었을 때 아직 핵심 피처가 완성되지 않은 것들도 있었고, 베타 서비스가 끝난 후에 한 숨 돌리고 출시 전에 문제를 해결할 시간이 충분히 있었어야 했는데 그러지 못했다. 일정이 급하면 베타 서비스 기간에서 한 주 빼는 걸 쉽게 생각하겠지만 절대 그러지 마라.

베타테스트의 목표는 플레이어들이 오랜 기간동안 게임을 했을 때 어떻게 느껴질지, 플레이어들의 소셜 그래프에 따라서 플레이어 경험이 어떻게 달라질지를 살펴보는 것이다. 베타테스트는 모든 Zynga 직원들에게 다 오픈되었고, 우리는 페이스북 친구가 많은 플레이어들이 그렇지 않은 사람에 비해서 진행속도는 어떤지, 유저들은 얼마나 자주 플레이하고, 한 번에 얼마나 오래 하는지를 지켜보면서 한 번에 충분히 즐길만한 플레이를 제공했는지도 살펴보았다. 베타 테스트는 굉장히 도움이 되었지만 기간이 충분치 않았다.

교훈 : 플레이어들이 베타테스트 기간에 최대한 많이 플레이하게 하라. 베타 서비스 전에 모든 핵심 시스템을 제대로 구현해 놔라. 베타 서비스와 출시 이전에 충분한 여유시간을 가져라.

4. Content Structure

처음에는 전통적인 MMO 처럼 1-2달마다 한꺼번에 많은 게임콘텐트를 추가하려고 했다. 하지만 소셜 게이머들은 매일 조금씩 새로운 것을 해 보길 원했고, 새로운 것 보다는 언제 시작하고 얼마나 걸릴지 예상할 수 있는 가벼운 게임경험을 원했다. 즉, IJAW 의 콘텐트와 스토리라인은 전체요리 정도의 크기였지만 플레이어들은 한 입에 먹을 수 있는 간식꺼리 같은 게임을 원했다.

출시 이전에는 매주 하나씩 큰 맵을 추가하고, 6-8주마다 하나의 큰 공간(5-10 개의 맵으로 구성된)을 추가하려고 했지만 그걸로는 부족했다. 플레이어들은 매주 새로운 콘텐트를 빠르게 즐기고 싶어했다. 그래서 우리는 개발 파이프라인을 맵을 매주 뽑아낼 수 있도록 변경하고 몇 개의 맵마다 새로운 스토리라인을 연결했다. 아쉬웠던 점은 몇몇 UI 와 게임 흐름, 특히 게임에서 모든 모험에 대한 중심허브 역할을 하는 월드맵이 대규모 콘텐트 구조에 맞춰서 디자인되어 있었다는 점이다. 월드맵을 좀더 빠르게 맵을 개발하는 방식에 맞출 수 있도록 변경하는데 몇 주 이상의 반복개발을 해야 했고, 어려운 작업이었다.

교훈 : 짧게 즐기는 게임의 콘텐트는 유저들의 플레이스타일에 맞춰서 디자인해야 한다. 

5. The Base Camp

처음 몇 달 동안은 전통적인 게임처럼 맵 위에서만 게임이 진행되도록 만들었는데, 플레이어 입장에서는 다시 게임을 시작했을 때 게임과 스토리에 다시 익숙해질 필요가 있었기 때문에 이런 방식을 힘들어했다. 한 참 고민한 끝에 플레이어에게 집이라고 할만한 시작지점을 주기로 하고 베이스캠프(Base Camp)를 만들었다.

디자인 후반에 베이스캠프가 도입되는 바람에 아무리해도 게임에 잘 녹아들어가지 않았다. 맵 위에서 게임하던게 익숙한 플레이어에게는 베이스캠프가 굉장히 다른 방식이었다. 베이스캠프의 가장 큰 문제는 베이스캠프에 너무 많은 기능을 구겨넣었다는 점이다.

베이스캠프를 플레이어들의 시작점이자, 꾸미는 공간, 트로피를 자랑하는 공간, 약속 메커니즘을 추가할 수 있는 공간, 친구를 만날 수 있는 공간으로 만들려고 했다. 일부는 구현되었지만 나머지는 제대로 구현하지 못했다. 베이스캠프는 출시 이후에도 몇 달 동안 반복개발을 통해서 겨우 모든 기능이 동작하게 만들 수 있었다.

교훈 : 너무 많은 기능을 구현하려는 피처가 있다면 좀더 관심을 쏟아라. 서로 다른 게임플레이가 이어져 있다면 매끄럽게 만들도록 시간을 더 투자하라. 문제가 있다면 빨리 파악하고 어서 진로를 변경하라.

PS : Farmville2 에 보이는 first-time-user experience testing (FTUE) 의 흔적. 아직 테스트가 되지 않았다는 걸 남기기 위한 tag 인 것인지, 다른 약자인지는 잘 모르겠음. 그나저나 친구 초대를 안 하면 게임 진행하기가 너무 어렵게 되어 있는데 나같이 친구없는 유저는 Zynga 게임 못 할 듯.

----
[GameDeveloperMagazine]
