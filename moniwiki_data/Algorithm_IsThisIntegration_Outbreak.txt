= 문제 요약 =
 * 원과 정사각형이 교차 할 때, 각 부분 영역의 넓이 구하기

= 문제 해결 =
 * 삼각형과 부채꼴의 볼록부분 넓이를 구해서 해결

= 소감 =
 * 답에 차이가 나는 이유를 모르겠음;
  * 아 잘못 풀었네요.. 올리다 문제점 발견 흐..
  * 음, 제대로 고친거 같은데.. Wrong Answer.. 흐..;
   * UVa결과 Accepted! Programming-challenges 홈페이지에 문제가 있는듯^^;

= ''' 풀이 ''' =
{{{#!vim cpp

// "Is This Integration" Solution By Outbreak 

#include <iostream>
#include <iomanip>
#include <cmath>

using namespace std;

//#define _TDD

//---------------------------------------------------------------------------

namespace Solver
{
	static const double PI = 3.14159265358979;
	
	class ABCD
	{
	public:
		ABCD(double r) : r(r) {}

	public:
		// 각 영역 넓이
		double GetStripedArea()
		{
			return GetRectangleArea() + GetChordArea() * 4;
		}

		double GetDottedArea()
		{
			return  GetTriangleArea() * 4 + GetChordArea() * 4;
		}

		double GetRestArea()
		{
			return r * r - GetStripedArea() - GetDottedArea();
		}

	private:
		// 부채꼴 ABD, CDB
		double GetBigFanArea()
		{
			return (r * r * PI) / 4;
		}

		// 삼각형 ABD, CBD
		double GetBigTriangleArea()
		{
			return r * r / 2;
		}

		// striped 영역 내부 정사각형 넓이
		double GetRectangleArea()
		{			
			return GetChordLength() * GetChordLength();
		}

		// dotted 영역 내부 정삼각형 넓이
		double GetTriangleArea()
		{
			return sqrt((double)3)*GetChordLength()*GetChordLength()/4;
		}
	
		// striped 사각형 또는 dotted 삼각형의 볼록 부분 넓이
		double GetChordArea()
		{		
			return (GetBigFanArea() - GetBigTriangleArea() - GetRectangleArea()/2 - GetTriangleArea() ) / 3;
		}

		double GetChordLength()
		{
			return  (r/2) / cos(PI/12);
		}

	private:
		double r;
	};

	void Calculate(const double r, double& striped, double& dotted, double& rest)
	{
		ABCD abcd(r);

		// striped		
		striped = abcd.GetStripedArea();

		// dotted
		dotted = abcd.GetDottedArea();

		// rest
		rest = abcd.GetRestArea();
	}
}

//---------------------------------------------------------------------------

namespace Runner
{
	void Execute(istream& in, ostream& out)
	{
		double a;

		while( in >> a )
		{
			if( in.fail() )
				break;

			double striped = 0, dotted = 0, rest = 0;

			// 답 구하기
			Solver::Calculate(a, striped, dotted, rest);

			out << setprecision(3) << fixed << striped << " " << dotted << " " << rest << endl;	
		}
	}
}

//---------------------------------------------------------------------------

#ifdef _TDD

#include "unittest++.h"

TEST(Output1)
{
	stringstream input;
    stringstream output;

    input << "0.1";

	Runner::Execute(input, output);

	CHECK_EQUAL("0.003 0.005 0.002\n", output.str());           
}

TEST(Output)
{
	stringstream input;
    stringstream output;

    input << "0.1\n0.2\n0.3\n";

	Runner::Execute(input, output);

	CHECK_EQUAL("0.003 0.005 0.002\n0.013 0.020 0.007\n0.028 0.046 0.016\n", output.str());           
}

#endif

//---------------------------------------------------------------------------

int main()
{

#ifdef _TDD	
	UnitTest::RunAllTests();
#else
	Runner::Execute(cin, cout);
#endif // _TDD
	return 0;

}

}}}

