= 프로세스 개선, 마법은 없다 =
== 6시그마? 제발 쫌~ ==
 * [6Sigma] 검은띠
 * 정의, 측정, 분석, 개선, 통제(define, measure, analyze, improve, control)
 * TQM (TotalQualityManagement)
 * CQI (ContinuousQualityImprovement)
 * 급박한 상황에서 조언해 줄 코치, 그룹이 회사에 있는가?

== 담백한 린 ==
 * 방법론 광신자들...이 정말 있는가?
  * 외국의 컨설턴트
  * 한국의 외로운 프로그래머
 * 중용의 도
  * 무조건적인 반발을 가진 사람은 여전히 있는 듯
 * Lean ([ToyotaProductionSystem])
 * 7 가지 낭비
  * 과잉생산 - 생산성에 방해가 되는 라이브러리 팀
  * 불필요한 운반
   * 빌드
   * 가지치기
    * VSS 가 Perforce 보다 좋은 단 한 가지 이유
    * 하지만 해외 브랜치가 있다면 어떨까?
   * 이메일
    * VOIP 폰, 위키, CVS 의 word 문서
  * 불필요한 동작
   * 버그 수정 코멘트 제대로 달기
  * 대기
   * 권한 위임하기 : 회의 대기 시간 없애기
    * 코드 : main branch committer
   * resource pipe line 끌어오기
  * 불필요한 공정
   * 해결책 : TDD
  * 재고
   * 필요없는 기능을 미리 만들지 않기
  * 결함
   * 버그! - 해결사 vs 예방자

== 고객 불만족 ==
 * 베타 테스트, 기술 검토
  * 내부 중간 QA ! 내부 QA 인원은 있는가?
 * 고객과의 연결 고리
  * 우리 팀의 시장 조사 방법은?
  * 고객은 공정한가?
  * 시장 조사를 믿지마라
 * 추적성(traceability) ?
 
== 애자일 총알 ==
 * 애자일 미신
  * 큰 그룹에 효과 있다? 없다?
  * 문서 작성? 설계 여부?
   * 외재 요인 vs 내재 요인
 * 규칙
  * 변경을 위한 변경은 피하라
   * 어디 선에서 멈춰야 할 것인가
  * 과도한 시도는 자제하라
   * 천천히 적용하기. ex) 스크럼 시간, 백로그 방식
  * 프로젝트 수준과 기능 수준 분리
   * 전략 : waterfall, 전술 : scrum
 * 리팩토링, 지속적인 통합, TDD, 스크럼이 MS 에서 가장 성공적
  * UnitTest 에 대한 [http://www.joelonsoftware.com/items/2007/12/03.html 조엘의 언급]
 * 용어를 잘 사용하자
  * 스크럼의 실수이자 성공요인 : 관리자의 용어를 쓰지 않은 것
