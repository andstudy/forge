= 문제 풀이 =
 쉬운문제인줄 알았는데, 썩 쉬운건 아니더군요. 숫자 범위가 가장 큰 걸림돌 이였습니다.
 최대 입력값이 20억 이기 때문에 20억의 배열에 각각의 결과를 미리 구해두는 방법으로 처음에 접근 했으나 배열의 크기가 0xffffffff를 넘었기 때문에 컴파일 에러. 
 배열을 두개로 쪼개서 해보았지만 스택 영역이 제한이 넘어서 에러.
 사실 이건 컴파일 성공하더라도 실행시간이 매우 크기 때문에 (일반적으로 Big-O 로 표현했을때 최대값에 대한 결과가 1억이 넘으면 시간초과가 떨어집니다, 10억이였나;) 불가능한 방법이였습니다.
 결국에 역으로 생각을 했습니다. 1이 시작하는 숫자, 2가 시작하는 숫자, 3이 시작하는 숫자, 이런식으로 저장하면 배열의 크기를 매우 많이 감소시킬 수 있거든요.
 하지만 이 방법도 함수 내부에 있으면 스택크기 초과로 컴파일 안되더군요, 그래서 전역으로 두었습니다.
 여하튼.... 힘들게 Solved받았네요 ㅠ_ㅠ;

= 소스 코드 =
{{{
#include <iostream>
using namespace std;

int Set[1000000];

int main()
{

	Set[1] = 1;
	Set[2] = 2;
	Set[3] = 4;
	Set[4] = 6;
	Set[5] = 9;

	int remember = 1;
	for( int i = 6; i < 1000000; i++ )
	{
		int Temp = Set[i-1];
		int j;

		for( j = remember; j < i; j++ )
		{
			if( Set[j+1] >= i ) break;
		}

		Set[i]	 = Temp + j;
		remember = j;
	}

	int in;

	while( cin >> in )
	{
		if( in == 0 ) break;

		int i;

		for(i = 1; i < 1000000; i++ )
		{
			if( Set[i+1] > in ) break;
		}

		cout << i << endl;
	}

	return 0;
}
}}}
