1. 프로그램읽기 
신입사원이 매번 이렇게 물어본다. -> 왜이렇게 짰는지 모르겠어요 코드가 눈에 안들어와요~-_-;
다음과 같이 맨토링=> 이게 다 이유가 있는 코드들이다. 잘 보고 왜그랬는지 파악해봐라. 일단 이해해보는 것도 의미가 있다.
예전과 같으면 미친거아냐 그랬음 :) (농담반 진단반)

2. 좋은 프로그램
효율적인 프로그램의 정의가 어렵다.. -> 일단 가독성과 추후 유지보수 오류가 적은 방향으로 코드 작성
-> 변수를 길게하고 복잡한 개념을 넣지 않음

3. 코드리뷰, 패어프로그램의 의심
비자아적 프로그램이라는 개념 획득 :
이 개념덕분에 코드리뷰나 페어 프로그램등의 행위의 긍국의 목적을 이해할 수 있었슴.
팀내에서 작성된 코드를 부분별로 나눠서 작성 하는등의 (중간정도 진행된 코드의 테스트케이스를 다른사람에게 작성시킴)
과정을 통해서 팀에 비자아적 프로그래밍 개념 도입노력
하지만 쉽지는 않음 T_T

4. 신입개발자의 트래이닝방법
소스코드 수정하지말고 코드리뷰만 하면서 결과를 작성해보자(박일님방법)
-> 신입사원에게 도입하면서 시험중 , 산출물 잘나온다면 도움이 될 수 있을것 같음

5. 팀내에서 업무 분할
파트내에서 특정분야에 능력을 보여주는 사람에게 일을 분배해줌.
경험적으로 좋아하는걸 배당하면 효과가 더 좋음

6. 개인의 성격변화의 인식
최근에 유지보수성 업무만 진행하다보니 현상 유지만 되고 새로운것에 대한 갈망이 죽어가는것을 느낌
이것은 프로그램과정을 통해서도 성격이 변할 수 있다는 것으로 인식대고 의도적로 새로운 기술에 대해서 도입검토민
자료 조사를 많이 시도함
