문명 V

4년전 [http://en.wikipedia.org/wiki/Jon_Shafer Jon Shafer] 는 7 명의 아티스트와 Mod 가능한 문명 IV 엔진으로 다음 버전을 위한 프로토타이핑 개발을 시작했다. 엔지니어링 입장에서는 문명 V 를 위해 처음부터 새로 엔진을 만들 기회가 생겼다. 아트 입장에서는 좀더 현실감 있는 세계, 자국어로 얘기하는 문명 지도자 씬 등을 만드는 도전꺼리가 생겼다.

잘된 점

1. CLEAR BOUNDARY BETWEEN GAMEPLAY AND ENGINE.
프로젝트에서 가장 주요한 두가지 목표는 새로운 게임플레이(타일별로 유닛 하나, 헥사 도입 등등)과 비주얼 향상이었다. 이를 위해 DirectX 11 를 활용하는 새로운 그래픽 엔진을 개발하기로 했다. 일정대로라면 새로운 엔진은 18개월 후에야 도입할 수 있었기 때문에 새로운 게임플레이는 기존의 문명 IV 엔진으로 먼저 만들기로 했다. 게임플레이와 엔진쪽 인터페이스를 확실하게 구별했기 때문에 나중에 쉽게 엔진을 교체할 수 있었다.

2. OUR WONDERFUL, WONDERFUL FRIENDS.
2009 년 1월, 엔지니어팀은 문명 V 엔진을 열심히 만들고 있었다. PC 용 게임 개발에서 어려운 점 중의 하나는 여러 하드웨어 플랫폼에서 테스트해야 한다는 점이다. 500 개 넘은 하드웨어에서 테스트하더라도 수백만이 넘는 유저에게 배포되고 나면 문제가 생기기 마련이다. ATI, Intel, nVidia 가 이런 위험을 최소화 하는데 많은 도움을 줬다. Intel 은 새로운 Core 프로세스용 최적화를 돕기 위해 엔지니어를 파견했고 Sandy Bridge 하드웨어도 제공했다. nVidia 도 3D 솔루션 개발을 위해 엔지니어를 파견했고 하드웨어 최적화를 도왔다. ATI 역시 최적화를 도와줬고, 테스트용으로 최신 AMD 시스템을 제공했다. nVidia, ATI 모두 다양한 비디오카드를 제공해 주었고, 호환성 랩에서 테스트 할 수 있게 해 줬다.

3. CO-LOCATING SUB-TEAMS.
이번 프로젝트에서는 처음부터 모든 프로젝트 팀원을 같은 곳에 두기로 했다. 처음에는 모든 팀원이 같은 빌딩의 같은 편에 앉게 해 의사소통을 쉽게 만들었다. 컨셉아트팀, 모델러, 애니메이터 같은 부서들도 다같이 같은 사무실에 있도록 했다. 이런 특정 부서들을 함께 두는 것 뿐만 아니라 자주 함께 의사소통 해야 하는 사람들도 같이 묶어서 앉게 했다. 예를 들어 리드 디자이너, 리드 프로그래머, 리드 아티스트가 같은 사무실에 앉았다. 그래픽 프로그래머는 아티스트와 같이 앉아서 기술적 문제를 챙기고, 아티스트들이 작업표준을 지키는지 확인했다. 이렇게 매일 얼굴을 마주 보고 일하게 했더니 의사소통이 활발해지고, 문제를 빨리 해결할 수 있었다. 많은 게임회사가 아티스트와 프로그래머의 자리를 나눠놓는데 이렇게 되면 두 팀간에 긴장 관계가 생기기 마련이다. 사람들을 프로젝트별로 묶어놓음으로서 팀별 긴장감을 줄이고, 사람들이 자기 소속팀이 아닌 프로젝트를 위해서 일하게 할 수 있었다.

4. EXPERIENCED AND DIVERSE ART TEAM.
다양한 재주를 가진 베테랑 아트팀은 generalist 로서 컨셉, 모델, 프로토타입을 빠르게 만들어 주었다. 문명 같은 독특한 게임을 개발하려면 문제 풀이 능력과 함께 [http://ko.wikipedia.org/wiki/%EC%95%84%EC%9D%B4%EC%BD%94%EB%85%B8%EA%B7%B8%EB%9E%98%ED%94%BC 아이코노그래피(iconography)]에 비범한 재능이 필요하다. 여러 아티스트가 이전 작품을 개발하면서 어떻게 일해야 하는지를 알고 있었고, 인터페이스 리드는 CIVILIZATION REVOLUTION 이라는 콘솔용 게임을 개발하면서 많은 경험을 쌓은 사람이었다. 여기에 열정적인 주니어 아티스트들이 시너지 효과를 냈다. 그 외에도 영화쪽, 2D 애니메이션쪽 등 다양한 경험을 지닌 아티스트들이 참여했다.

5. IF ONLY THERE WERE ZOMBIES.
Jon Shafer 가 제안한 문명 V 용 MOD 시스템은 모두를 흥분시켰다. 이전에는 하드코어 팬이 아닌 대부분의 캐주얼 유저들은 굉장한 모드가 있다는 걸 들어보지도 못한 경우가 많았기 때문이다. MOD 리드인 Shaun Seckman 가 들어와 만든 MOD 시스템은 앞으로 MOD 를 만드려고 하는 모든 게임에게 좋은 예시를 제공했다. 플레이어는 누구든 쉽게 MOD 를 찾아 다운로드할 수 있고, 재시작이나 기술적으로 뭘 알아야 할 필요도 없다. 여기에 우리가 제공한 World Builder 를 함께 사용하면 누구든 시나리오 디자이너가 될 수 있었다. 이미 MOD 다운로드 수는 백만건을 넘어섰다. 특히 GameSpy 와 그쪽의 Special Projects 팀이 백단 서버 인프라를 구축해 준 점도 크게 도움이 되었다.

아쉬웠던 점

1. CLASH BETWEEN DESIGN CHANGES AND COMPLETING EXPECTED FEATURE SET.
문명 IV 는 문명 시리즈를 굉장히 충실히 구현한 작품이었기 때문에 사람들을 문명 V 을 굉장히 기대하고 있었다. 5 번째 작품이다보니 우리 팀은 칠판앞에 보여서 새로운 시리즈에서 어떤 엄청난 새로운 것을 넣을 수 있을까 고민했다. 디자인을 많이 바꾸다보니 일정 맞추기가 어려웠다. 특히 '타일 하나에 유닛 하나만 가능' 이 가장 크게 바뀌는 부분이었다. 이것은 게임에 훨씬 다양한 전략적 요소를 제공했고 결과적으로 성공했다고 생각하지만, 이 기능과 여기에 맞물리는 다른 시스템들을 구현하는데 많은 시간이 걸렸다. AI 시스템도 완전히 다시 만들어야 했다. 이렇게 새로운 시스템을 잘 만들려고 집중하다보니 이전 버전에 있던 여러 시스템을 버려야 했다. 일부 하드코어 팬들은 이 점에 실망했지만 선택과 집중을 한 것이 게임 개발에 튼튼한 기초가 되었다.

2. OUR EXTERNAL DESIGN TEAM WAS NOT BROUGHT ONLINE UNTIL VERY LATE IN THE PROCESS.
문명 IV 를 개발할 때에는 "Frankenstein" 이라고 해서 문명을 속속들이 알고 있는 하드코어 팬들로 구성된 외부 디자인 그룹을 활용했다. Frankenstein 과 NDA 를 맺고 나면 우리는 그쪽에 정기적으로 빌드버전을 제공하고, 그쪽은 우리 디자인 팀에게 게임플레이 피드백을 주는 식이었다. 이런 관계는 문명 IV 의 성공에 큰 역할을 했다. 당연히 문명 V 를 개발할 때에도 Frankenstein 과 함께 작업했다. 초반에는 문명 IV 엔진 위에서 프로토타입으로 개발했었고 이 엔진은 이미 DRM free 상태였기 때문에 Frankenstein 팀에 빌드를 전달하는데 아무 문제가 없었다.
문제는 새로운 엔진이 나온 후였다. Steam 을 통한 DRM 솔루션이 아직 승인나지 않았고 빌드 시스템에 통합되지도 않았는데 새로 만든 엔진이다보니 할 일이 많았고 구현에 2달이 걸렸다. 밸런싱할 꺼리가 어마어마한데다가 한 번 테스트하는데 12시간이나 걸리는 게임을 두 달간 아무런 외부 피드백을 못 받은 것은 굉장히 뼈아픈 일이었다.

3. CRITICAL POSITIONS WERE STILL MISSING ENTERING PRODUCTION.
요즘 게임에는 멀티플레이 요소가 중요하다보니 괜찮은 네트워크 프로그래머 구하기가 뒷마당에서 유니콘 발견하기만큼이나 어렵다. 우리도 프로덕션 단계에 들어갈 때까지 멀티플레이 팀을 구성할 수 없었고 엔진이 바뀌면서 많은 부분을 처음부터 새로 구현해야 했다. 여기서부터는 2K와 우리 내부 QA 팀, 그리고 엔지니어팀이 잘 해 주었다. 일단 게임의 핵심 기능을 구현한 후에는 멀티플레이가 굉장히 중요해졌기 때문에 네트워크 엔지니어와 두 명의 게임플레이 엔지니어로 구성된 스트라이크 팀을 만들어 대처했다. 이런 노력 덕분에 게임을 출시할 수 있었지만 아직 멀티플레이에는 전작에 있었던 기능에서 빠진 것들이 있다. 우리는 문명 V 의 멀티플레이 기능을 '개발 중'이라고 생각하고, 다른 게임요소와 마찬가지로 계속해서 발전시키려 노력하고 있다.

4. INDUSTRIAL AND MODERN ERAS WERE NOT AS POLISHED AS THE FIRST HALF OF THE GAME.
새로운 전투시스템을 튜닝하는데 많은 시간이 필요했다. 뭔가가 변경되면 새로 게임을 시작해 테스트해야 했는데, 문명이라는 게임이 워낙 한 번 게임하는데 오래 걸린다는 문제가 있었다. 그리고 뭔가 시스템 하나만 따로 테스트할 수 없었고 이게 전체 게임에 잘 적용되었는지 전반적으로 확인해야 했다. 예를 들어 고대시대에는 문제없던 시스템이 현대시대에는 문제가 있을 수 있었다. 물론 현대시대부터 게임을 시작할 수는 있었지만 밸런싱과 게임플레이를 테스트하려면 전체 게임을 처음부터 테스트하는 것보다 좋은 방법이 없었다. 또한 개발 기간 중에는 세이브파일 포멧이 변경되면서 깨지는 바람에 테스터가 처음부터 다시 게임을 해야 하기도 했고, 버그 때문에 다음 빌드 나오기 전까지는 더 이상 진행하지 못하는 경우가 많았다. 이러다보니 중반까지의 게임은 오랫동안 테스트 플레이가 된 반면 중반 이후의 게임은 오래 테스트되지 않았다. 개발 도중이라 힘들겠지만 최대한 세이브파일은 하위호환성을 유지해 줘야 한다는 교훈을 얻게 되었다.

5. LAYOFFS AND THE OBVIOUS EFFECT ON MORALE.
인원 감축이, 그것도 베타 나가기 직전에 벌어지게 되면 개발자들 사기에 큰 영향을 미친다. 작년 불황으로 인해 우리 팀도 가장 바쁜 시기에 인원을 줄여야 했다. 이런 상황은 아무리 대비한다고 해서 피할 수 있는게 아니다. 3년간 게임을 개발하면서 가족같이 끈끈한 팀이 되었기 때문에 이런 인원감축은 생산성에 영향을 주었다. 다시 일어서기란 쉽지 않았지만 극복해낼 수 있었고, 일정에 맞춰서 멋진 게임을 출시할 수 있었다.

Data Points
퍼블리셔 : 2K Games
개발사 : Firaxis Games
개발자 수 : 풀타임 50명, 계약직 6명
개발기간 : 3년 3개월

----
[GameDeveloperMagazine]
