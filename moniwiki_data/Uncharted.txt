[http://www.gamasutra.com/view/feature/3809/postmortem_naughty_dogs_.php?print=1 Gamasutra 기사 원본] 글을 [http://blog.naver.com/nail9s/ 나무인형님]이 번역해 두신 글 중에서 일부 어색한 부분을 수정해서 포스팅합니다. 번역글 원본은 [http://blog.naver.com/nail9s/140062200996 여기] 에서 보시면 됩니다. 번역에 오역이나 어색한 표현이 충분히 있을 수 있으니 참고해서 읽어주세요.

attachment:uncharted_header.jpg

= 포스트모템 : 너티독의 '언차티드 : 엘도라도의 보물' =
너티독은 '언차티드 : 엘도라도의 보물'이 그들에게 있어서 지금까지 가장 크고 복잡한 도전이었다고 한다. 원래 Game Developer magazine 에 실렸던 매력적인 포스트모템을 통해서 그들의 성공과 비틀거림을 공유한다.
 
2004년 말 (잭 앤 덱스터, 크래쉬 벤디쿳등을 개발했던) 너티독의 일부 개발자들은 스튜디오에서 처음으로 PS3 용 게임을 만들기 위한 작업을 시작했다. 

어쩌다보니 프로젝트는 지금까지 너티독에서 나온 게임 중에서 가장 크고 복잡한 게임이 되어버렸다. 포스트모템에서는 우리가 애쓴 것, 성공과 실패, 그리고 다음에는 다르게 했으면 하는 점에 대해 얘기한다. 

= 무엇이 잘 되었는가? =
== 1. 잘 만든 초기 디자인(하지만 필요하면 버릴 수 있어야 한다) ==
새로운 PS3의 기술을 구현하기 시작하면서 동시에 ‘언차티드 : 엘도라도의 보물’ 이 결국 어떤 모습이 될 것인지에 대한 디자인과 방향을 명확하게 만들기 시작했다. 일단 게임의 일반적인 전망을 동의한 후에는, (빛, 쾌활함, 유머러스함 등과 같이 너티독만의 어드벤처 게임에 어울리는) 게임의 톤과 게임을 원하는 방향으로 만들기 위한 코어 메카닉을 다듬었다. 그렇긴 해도 너티독의 강점 중 하나는 일찍 프로토타이핑을 하고 언제 디자인 문서와 달라져야 하는지를 아는 데 있다. 

좋은 예가 조준 메카닉이다. 처음에는 총격전에 자동 조준 시스템을 쓰려고 했다. 몇 달 동안 수많은 락온 타겟 선택 메카닉, 콘트롤 시스템과 카메라 조합을 시도해 보았다. 심지어 락온을 사용하는 동안의 스페셜 킬을 실행하기 위해 여러 종류의 미니게임을 구현해 보기도 했다. 

조준 메카닉에 여러 방법과 개발기간을 투자해봤지만 깔끔한 게임 플레이가 나오지 않았다. 결국 자유로운 수동 조준이라는 전혀 다른 방향으로 접근하기로 했다. 

자유 조준을 대강 만들어 붙여보았을 뿐인데도 게임은 바로 직관적이고 재미있게 변했다. 조준 메카닉을 새로 만든다는 것은 몇 달동안 작업을 해야 한다는 것을 의미했지만 실제적으로 만들기에 충분할 만큼 빠르게 결정했다. 충분한 시간동안 새로운 메카닉을 통합해 다듬었고 이는 게임을 위해서 분명 바른 결정이었다. 

너티독에는 이런 식의 프로세스를 많이 사용했다. 종이에다 잘 정의된 아이디어를 적는 것도 훌륭한 일이다. 하지만 게임 디자인을 확정하는 가장 좋은 방법은 시도해보고 실수를 하는 것이다. 이를 통해 언제 아이디어가 제대로 돌아가지 않는지를 알고, 더 나은 방법을 위해 지금까지 하던 것을 버릴 수 있는 용기가 필요하다. 

== 2. 집중된 게임 플레이 ==
일부 탈 것 기반 섹션을 제외한 언차티드의 게임 플레이는 몇가지 코어 메카닉에 굉장히 집중하고 있다. 미션안에서 펼쳐지는 다양한 게임 플레이를 통해 재미를 주고자 했던 '잭 앤 덱스터' 시리즈의 디자인 접근방법과는 상당히 다른 것이었다. 

언차티드의 현실적인 세계관과 함께 이런 집중된 게임 방식은 게임을 디자인 하기 어렵게 만들었다. 괴상한 아이디어를 제안할 수 없었고 더욱 흥미로운 게임의 일부를 만들기 위한 괴상한 아이디어들을 실제로 만들기 위해서는 분리된 미션으로 제작해야했다. 

이러한 결과 게임디자인은 우리가 느끼기에 전반적으로 우아해졌다. 우리는 게임을 전체적인 관점에서 생각해야 했고, 코어디자인 메카닉을 끝내줄 정도로 멋지게 만들어야 했다.

또한 플레이어 메카닉이나 AI 같은 것들을 굉장히 시스템적으로 만들었기 때문에 제작기간의 마지막 몇 달을 조금이나마 쉽게 넘어갈 수 있었다. 예들 들어 플레이어 이동 셋 모양을 다듬을 때마다 같은 핵심 이동 셋에 의존하는 거의 모든 레벨이 더 재미있게 변했다.

attachment:actorsblocking.jpg
''배우들이 모션캡쳐하기 전에 예행연습을 하고 있다''

== 3. 정교함을 통한 멋진 연기 ==
언차티드의 캐릭터와 캐릭터용으로 캡쳐, 또는 제작한 연기가 많은 칭찬을 받아서 기쁘다.

그러나 스토리, 게임의 분위기, 캐릭터의 성공은 디테일이라는 깃발 아래에서 구성요소들이 결합되어 나온 덕분이라고 생각한다. 

이번 프로젝트에서 모션캡처를 처음 해 보는 것이다보니 작업방식에 있어서 선입견이 없었다. 최종적으로는 게임쪽에서 모캡을 쓰는 방식보다는 영화쪽 방식에 더 비슷하게 작업했다.

예를 들어 우리는 컷신에 사용될 모션캡처와 목소리 녹음을 할 때 같은 배우를 고용했다. 다른 게임에서는 드문 일이다. 

배우들과 함께 많은 대본 리딩과 리허설을 했고, 그 결과 실제 촬영에서 많은 씬이 잘 나올 수 있었다. 

또한 배우는 모션캡처 감독, 게임 디렉터와 함께 즉흥연기를 할 수 있었고, 여러 게임 속 명장면이 배우들의 창의성으로부터 나왔다.

모션캡처와 목소리 녹음에 같은 배우를 쓰기로 한 선택은 성과가 있었다. PS3에서 캐릭터는 모션캡처를 수행한 전문 배우의 뉘앙스가 드러날 정도로 충분히 사실적일 거라고 생각한다.

메인 캐릭터의 컨셉은 항상 직선적이고 단순한 것이었다. 드레이크에게는 티셔츠와 청바지 이외에는 다른 복장이 필요없다. 복장이라던가 다른 부분에서 그렇게 선택한 이유는 캐릭터의 특징이 모델의 액서서리나 외관보다는 연기자의 연기를 통해서 드러나기를 원했기 때문이었다. 

스토리에서도 미니멀리즘을 고집했다. 우리는 "말하지 말고 보여줘라"는 원칙을 시나리오 작업 기간 동안 내내 고수했다. 제스처나 표정만으로 충분한 대사는 제거했다. 또한 캐릭터의 대사는 표면적으로 드러나는 말과 (물리적인 연기로 전달되는)진심이라는 두 가지 레이어가 있었다,

이러한 깊이의 스토리와 연기가 과연 게임에 효과적으로 표현될까 의심한 적도 있었지만 완성된 컷신들을 보면서 이런 두려움은 금새 없어졌다. 

아티스트들이 만들어낸 높은 퀄리티의 캐릭터에 재능있는 애니메이터들이 다듬은 모션캡쳐 데이터가 더해지면서 뉘앙스 가득한 연기에 생명력을 느낄 수 있었다. 

캐릭터의 대사가 여러가지 함축적인 서브 텍스트들을 포함한채 전달되는 동안 캐릭터들의 진심어린 감성이 제스처와 표정을 통해서 읽혀졌다. 이러한 정교한 콤비네이션과 결과적으로 나타난 캐릭터의 진실성이 성공적인 스토리를 만들 수 있었던 열쇠였다고 생각한다.

attachment:actors2.jpg

== 4. 애니메이션과 AI ==
애니메이션과 AI 는 프로젝트를 시작할 때부터 매우 중요한 요소였다. 우리는 이전에 작업한 게임들의 컷신과 게임플레이에서의 애니메이션을 매우 자랑스럽게 여겼다. 현실적인 캐릭터의 인간성과 취약성을 필요한 만큼 만들어 내기 위해서는 매우 힘들게 일해야 한다는 사실을 알고 있었다. 특히 매우 좋은 얼굴 표정 애니메이션은 응원하기를 원하는 현실적인 영웅을 묘사하는 중요한 열쇠가 될 것이었다. 

또한 AI는 게임플레이를 제대로 만들수도 있고 망칠 수도 있었다. 전투에서의 적 뿐만 아니라 드레이크가 게임 속에서의 여행을 함께 할 동료 캐릭터들의 AI 도 마찬가지였다. 그래서 우리는 게임 환경내에서 사람들의 사실적인 반응에 관련된 문제에 대한 일반적인 해법을 제공할 수 있도록 프로젝트의 초반부터 매우 복잡한 AI와 애니메이션 시스템을 만들었다. 

결과적으로는 애니메이션과 AI 에 대한 우리의 초기 방향성이 너무 복잡하다는 걸 알게 되었다. 우리는 그냥 게임이 돌아가고 재미있게 만들기만 하면 된다는 걸 까먹고 미학적인 측면에 몰두했다. 그래서 단순한 해결책 대신 그 전부터 생각하고 있던 캐릭터-액션 게임에 맞는 행동쪽에 집중했다.

드레이크와 AI가 조종할 캐릭터들의 full-body, partial 애니메이션과, 그 외 부가적인 애니메이션을 플레이하기 위해 layering 과 blending 기법을 썼는데 그 결과 엄청나게 다양한 애니메이션을 얻을 수 있었다. 25 레이어의 드레이크 애니메이션을 한 번에 플레이해야 하는 경우도 있었다! 또한 드레이크가 주위환경에 반응할 수 있도록 IK(inverse kinematics) 기법도 도입했다. 최종적으로 얻은 결과에 매우 만족한다. 

== 5. 차세대의 그래픽 ==
이전 4개의 프로젝트에서는 플레이스테이션2용 게임만 개발했다. 때문에 쉐이더와 같은 최신 그래픽 기술을 따라가야 하는 문제가 있었다. 또한 언차티드에서 원하는 결과를 얻기 위해 프로그래머와 아티스트 사이의 엄청난 양의 협동작업을 보여 주었다. 

attachment:uncharted_shot1.jpg

너티독의 이전의 프로젝트에서는 게임월드의 각 부분에 특화된 처리를 하기 위해서 동시에 여러 개의 렌더링 엔진을 사용했었다.

두 개의 중심 시스템이 지오메트리(''geometry'')를 렌더링하고 세번째 시스템은 물을, 나머지 렌더링은 파티클, 데칼과 HUD를 렌더링했다. 이런 모든 과정은 PS3의 하드웨어에 굉장히 최적화된 것이다. RSX 그래픽 프로세서에 과부하가 걸리는 경우에는 콘솔의 SPU(''Synergistic Processing Unit'') 를 활용하기도 했다.

물 쉐이더는 다른 게임처럼 단순한 반사와 굴절을 기술만을 이용한 것이 아니었다. 독특한 물 효과적인 물흐름의 원리도 함께 사용했다. 색깔은 텍스처로 계산되지 않고 물의 깊이와 관련된 광학과 물리의 법칙들이 사용되었다. 이런 시도는 물이 매우 사실적으로 보이는 데 큰 도움이 되었다. 물결이나 부딪힘으로 생기는 거품과 같은 물 효과 이펙트를 쉐이더에 넣어 물이 근사하게 보이게 했다.  

전반적으로 최신 그래픽 기법을 따라잡았을 뿐만 아니라 기대치를 높혔다는 점에서 굉장히 만족스러웠다.

= 잘못된 점 =
== 1. 속도를 너무 천천히 낸 것 ==
처음 언차티드에 대한 아이디어를 만드는 단계에서 너무 많은 방향을 시도하려 했다. 자유로운 세계에서 펼쳐지는 3인칭 캐릭터-액션 게임을 만들고 싶다는 점은 잘 알고 있었지만 그 이외의 다른 게임 플레이, 스토리, 세팅들은 초기 논의 과정과는 상당히 많이 바뀌었다. 

많은 이유로 게임의 최종 컨셉을 확정하기까지 상당한 시간이 걸렸다. 게다가 프로젝트 초반에는 엔진, 렌더링 파이프 라인, 툴 같은 기술을 만드는데 집중했기 때문에 게임플레이 아이디어를 프로토타입으로 만들기 위한 프로그램팀의 서포트를 받을 수 없었다. 

이러한 늦은 출발은 팀의 사기에 영향을 미쳤다. 하지만 일단 디자인에 집중하고, 개발팀내에서 디자인에 대해 의사소통하고 구현하기 시작하자 팀원들의 사기는 올라갔고 작업은 엄청나게 빠른 속도로 진행되기 시작했다. 

다음 프로젝트에서는 확실하게 정보가 팀에 잘 전달 되도록 할 것이고 게임의 스토리 아이디어를 확정할 것이고 이런 아이디어를 위해 무엇을 해야할 지 가능한 빨리 인식하도록 할 것이다. 

== 2. 개발 중반쯤에서 툴을 다시 고려한 점 ==
공유된 기술을 사용하고 싶다는 생각 때문에 새로운 어셋 관리 시스템과 첫 번째 GUI 제작 툴, 쉐이더와 material 에디터를 새로 개발했다. 그러나 2006년 6월, 게임이 중반정도 만들어 졌을 때 개발팀은 큰 위기에 봉착했다. E3 티저 트레일러를 만드는 과정에서 새로운 툴들에 수많은 문제가 나왔고 사람들의 불만이 이만저만이 아니었다. 

우리는 개발툴을 만드는 데 있어서 너무 앞서 나갔다는 걸 알게 되었다. 너무 똑똑하려고 한 결과 어떤 툴에나 있는 모든 문제를 전부 다 해결하겠답시고 굉장히 복잡한 방식으로 툴을 만든 것이었다. 상황을 더 나쁘게 만든 것은 개발자의 거만한 욕심에 정신이 팔려서, 실제로 사람들이 레벨을 만들어 플레이해 볼 수 있게 하는 빌드 파이프라인을 너무 늦게 구현했다는 점이다.

이러한 문제들을 해결하기 위해 우리는 많은 툴을 만드는데 있어 우리에게 익숙한 ‘잭 앤 덱스터’의 방법으로 되돌아 갔다. 그로부터 모든 것은 계속 좋아졌으며 게임이 나오는데 큰 견인차 역할을 했다. 

이를 통해 배운 점은 툴 개발에 큰 뜻을 품는 것 자체는 나쁜게 아니라고 해도 현재의 상황에 맞는 선택을 해야 하며 툴과 관련해서 팀이 겪고 있는 모든 문제에 전부 다 해결하려고 들면 안 된다는 점이다. 때로는 간단한 우회책이 결과적으로 더 나을 수 있고 게임 개발을 위한 시간을 벌 수 있다는 사실을 잊어서는 안된다. 

== 3. 게임의 빌딩이 너무 늦어진 점. ==
개발 초기에 좋은 빌드 파이프라인을 구축하는 것을 우리 스스로가 늦췄기 때문에 프로젝트를 진행하는 내내 늦어진 것을 따라잡기 위해서 노력하고 있었다. 언차티드의 포스트모템에 대해 얘기할 때마다 항상 반복적으로 나오는 것은 우리에게 필요한 복잡한 디자인과 제품 아이디어를 지원하기 위한 새로운 기술과 게임 플레이 코드를 기다리는 것 보다 간단한 툴을 통해 빨리 빌드를 만들고 이른 시기에 플레이 가능한 빌드를 얻는 것이 훨씬 나은 일이었다는 것이다. 

이 문제는 툴 개발에서 생긴 문제와 비슷하다. 우리는 목표를 너무 높게 잡았고, 앞으로 나아가기 위해서 스스로를 땅바닥으로 끌어내려야 했다. 예를 들어서 우리는 세계관에 현실성을 강화하고 수많은 종류의 적들이 나올 수 있게 하기 위해서 교환이 가능한 옷과 몸의 파트 시스템을 사용하고 싶었다. 플레이어가 적캐릭터 하나하나를 독특하다고 느끼게 하고 싶었다. 

문제는 이런 생각 때문에 전체 적 구현 프로세스가 연기되었다는 점이다. 파츠 시스템을 만들 시간이 충분하지 않다는 걸 깨닫기 전까지 적들의 디자인을 확정하는 작업을 시작도 못하고 있었다. 결국 발매된 게임에 들어간 적들을 만들기 위해 분주하게 일해야 했다. 

이 점은 '게임을 열심히 만드는 것이 결국 게임을 만드는 최고의 방법이다' 라는 너티독에 만연한 개발 철학과도 연결된다. 계획을 충분히 세우는 것은 중요하지만 지나치면 안된다. 구현하면서 굉장히 많은 것을 알게 될 것이고, 이것 때문에 디자인이 바뀔 것이기 때문에 툴이 허용한다면 당장이라도 최대한 빨리 구현하기 시작하는 것이 가장 좋은 방법이다.

== 4. 게임 플레이의 리얼리즘이 어려웠다. ==
캐릭터와 스토리를 현실적으로 만들기 위해 접근한 방법은 순조로웠지만, 그러한 리얼리즘이 게임 디자인에 미치는 영향에 대해서는 너무 과소평가했다. 이런 어려움의 가장 큰 예는 적들의 hp 를 튜닝하는 점에서 볼 수 있다.

초반에는 적들이 피격을 많이 당해야 죽도록 설정했다. 그러자 적들이 무섭게 느껴졌다. 

하지만 총알을 2발 이상 맞고도 적들이 안 죽는 것은 비현실적으로 보인다는 피드백을 유저들로부터 곧바로 받기 시작했다. 이것은 우리의 설정을 다시 튜닝해야 한다는 것과 적들이 약해진 것에 대한 반대급부로 적들을 더 많이 스폰해야한다는 것을 의미했다. 

마지막에는 적들의 부상 상태를 만들어, 적들이 팔이나 다리에 피격을 당하면 그에 대한 반응으로 애니메이션을 바꾸도록 했다.

현실성과 게임 디자인 사이에서 생긴 또 다른 문제는 클래스가 다른 적을 시각적으로 다르게 보여주려고 할 때 있었다. 처음에는 적 캐릭터를 디자인 할 때도 메인 캐릭터에서 사용했던 미묘한 접근 방법을 그대로 사용했다. 그러나 적 캐릭터는 카메라에서 멀리 떨어져 있는 경우가 많았기 때문에 상당히 작게 표현되는 경우가 많아 플레이어들이 미묘한 차이점을 눈치채지 못했다.

게임을 개발하는 동안 적들의 디자인을 계속해서 이리저리 바꿨고 스타일을 바꿔서 일부 성공하기도 했다. 결국 일부 플레이어들이 다른 클래스의 적들을 제대로 구별 못하는 걸 보면 적들의 시각적 디자인을 좀 더 몰아붙였었어야 했다고 생각한다. 이는 차기작을 개발할 때에도 고민해야 할 문제다. 

== 5. 레벨 레이아웃을 충분히 반복개발하지 않은 점 ==
언차티드 레벨 레이아웃에는 여러가지 미디어의 요소를 혼합하는 방식을 썼다. 기본적으로 디자이너에게 편한 방법이라면 어떤 방식이든 괜찮았다. 평면도를 연필로 스케치하거나, 상세한 레이아웃을 모눈종이에 그리는 디자이너도 있었다.

대부분은 어도비 일러스트레이터를 사용하였고 간단한 프로토타입 지형은 마야를 이용하여 제작했다. 그것들은 레벨 디자인을 좀더 쉽게 할 수 있도록 도와 주었다. 때로는 그 두 가지 어플리케이션의 사이를 왔다 갔다 했다. 마야에서 스크린 캡처한 그림을 일러스트레이터에 주석으로 단 뒤에, 좀 더 변경하기도 했다. 

attachment:unchartedleveleditor_sm.jpg
'''The Uncharted level editor'''

만일 일정 압박이 심하지 않았더라면 최종적인 환경 아트(''environment art'')를 만드는 단계로 가기 전에 충분히 여러 번 레벨을 반복해서 개발했을 것이다. 아트 입장에서 아직 단순한 상태의 레벨을 더 많이 다듬으면 다듬을수록, 환경에 대한 재작업으로 낭비되는 시간을 줄일 수 있다.

이 개발단계에서는 디자이너, 컨셉 아티스트, 배경 아티스트들이 아이디어를 공유하고 조화를 이루며 같이 작업할 방법을 찾을 수 있었다. 덕분에 시각적으로도 굉장하고 플레이도 재미있는 레벨을 만들 수 있었다.

= 엘도라도의 보물 : 이제 찾았다 (''Charted'') =
''역주 : uncharted 가 '미지의, 잘 알지 못하는' 뜻이라 charted 라고 표현한 듯''

'언차티드 : 엘도라도의 보물'이 만들기 힘든 게임이었다는 사실은 의심할 여지가 없다. PS3 로 제작한다는 점, 테스트 되지 않은 게임 아이디어로 캐릭터-액션 게임을 만드는 것은 모험이었다. 

우리는 땀을 흘렸고, 울었고, 웃었고 결과적으로 해 냈다. 우리는 우리가 정복한 산을 바라보면서 주인공 네이던 드레이크가 그랬던 것 처럼 “잘가라, 멍청아”라고 말할 수 있었다.

결국 우리는 멋지고 스릴 넘치는 액션 어드벤처 게임을 만들었다. 이 게임은 우리가 아이처럼 좋아하는 스토리의 정수를 담고 있으면서도 동시에 새롭고 현대적인 느낌을 준다. 우리는 진심으로 ‘언차티드 : 엘도라도의 보물’을 자랑스럽게 여기고, 우리 팀 모두가 이 게임을 지금까지 우리가 만든 최고의 게임이라고 생각한다. 이제는 다시 정상 궤도로 돌아와, 더 잘할 수는 없을지 알아볼 때다.

= Game Data =
언차티드 : 엘도라도의 보물(''Uncharted: Drake's Fortune'')
개발사 : 너티독(''Naughty Dog'')
퍼블리셔 : 소니 컴퓨터 엔터테인먼트 
발매일 : 북미: 2007년 11월 19일, 일본과 오스트렐리아 : 2007년 12월 6일, 유럽 2007년 12월 7일
풀 타임 개발자 : 대략 70명
계약직 : 6명
개발 기간 : 프리프로덕션 1년, 프로덕션 2년
코드 : 200만줄 가량
사용한 소프트 웨어 : Autodesk Maya, Pixologic ZBrush, Autodesk Mudbox, Adobe Photoshop, Adobe Illustrator

= 참고 =
[http://parkpd.egloos.com/1972809 언차티드2 : 제작과정 전부 (Cell CPU, 강아지처럼 생각하기) HD - 포스트모템]
