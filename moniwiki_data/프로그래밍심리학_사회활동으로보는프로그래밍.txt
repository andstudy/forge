== 4장 프로그래밍 그룹 ==
CodeReview 과연 괜찮은가?
 CodeReview 를 했을 때 드는 시간을 측정했더니 평소 작업량의 30% 가 더 필요하더라
 이런 부분에 대해 관리자가 우려를 표시하면 어떻게 설득해야 할까?
  관리자에게 이런 얘기를 하면, 개발자를 한 명 더 넣어주는 식으로 해결하려든다
 pair programming 이 비자아적 프로그래밍인 것인가? 실제로 하는 곳이 있나? 어떤 식으로 실천하나?
  몇몇 회사가 있긴 하나 대부분은 하지 않음. 하지만 못 할 것도 없음
 code review 를 하긴 하는데, 맡은 파트가 달라서 코드를 소유한다는 느낌은 들지 않는다
  작업을 돌아가면서 맡아보니 꽤 효과가 있더라.

== 5장 프로그래밍 팀 ==
프로그램팀을 지속적으로 훈련시킬 방법은?
 자기개발 의지가 없는 사람은 어떻게 해도 훈련시키기 힘들더라. 그래서 처음부터 그런 사람은 안 뽑는다

개발자는 꼭 리더가 되어야 하나?
프로그램 능력 말고, 융화능력이 좋은 사람이 PM 역할을 맡으면 좋겠다.
팀장에게 권한이 너무 많이 주어져서, 팀장도 힘들고 팀원도 힘들다
좋은 관리자란 일단 잘 먹여야 한다
 재테크에 대해서는 모르는 게 없으면서, 음료수 살 때도 가위,바위,보 하자는 팀장
강압적인 상하관계 대신 수평관계여야 하지 않을까?
 필요한 순간에 결정을 내릴 수 있는 상급자는 있어야 하지 않을까?

리더나 팀원이 교체될 때 팀이 위기를 맞은 적이 있는가?
 나가는 사람은 그런 걱정을 하지만, 막상 남은 사람들이 잘 해내는 경우가 많더라
 이것저것 할 수 있다고 질러놓고 퇴사하는 사람도 있다
  이건 범죄이지 않을까?

문제가 생겼을 때 잘 모르면 기계 탓을 한 적이 실제로 있다
 QA 하시는 분들도 좀 더 재현방법을 잘 찾아주실 때, 디버깅도 빨리 할 수 있다
 그런데 진짜 기계문제인 경우도 있다
 NIC 가 이상해서 서버에 접속이 안 된다던가, 이상하게 AMD 는 괜찮은데, Intel 서버는 이상하다던가. 기계문제일 가능성도 배제해서는 안 된다.

자기만의 완전한 시스템을 구현하조자 하는 프로그래머 <-> 끊임없이 바뀌는 개발 스팩(기획서)
 개발 스팩은 당연히 변경될거라는 가정으로 프로그래밍을 해야 한다
 코드를 완벽하게 작성하되 일정을 못 맞추는 프로그래머는 어떻게 해야할까?
  그런 사람의 성향에 맞는 프로그래밍 업무를 맡겨야 하지 않을까?
 Nature Of Order 에서 나온 얘기인데, 팀의 목표를 한 장으로 정리(혹은 시로 만들어서) 해서 매번 읽게 하면 팀의 공통 목표를 잃지 않게 할 수 있다고 한다

배신 게임을 하지 말자
 대신 팀원들을 칭찬하자
 팀에 대한 신뢰는 성과를 통해 쌓인다

팀장이 정보의 비대칭성을 이용하면, 언젠가는 들키게 되고 신뢰를 잃게 된다
 회사가 모든 정보를 다 오픈하지만, 이를 통해서 '지금 우리 회사가 힘들다' 는 것만 강조하려 든다.

한국은 회식도 많고, 서로 끈끈해서, 누가 퇴사해도 궁금한 게 있으면 도움을 요청하기도 쉽고, 누가 뭐 하는지도 더 잘 안다
 감정 상하지 않게 퇴사 잘 하는게 중요하다

언제든 물러날 준비가 되어 있는 리더 <-> 책임감이 있는 리더
 회사랑 맞붙은 후에 나가버리는 리더는 책임감이 없다고도 할 수 있지 않을까?
 
어설픈 보스가 팀원들을 힘들게 한다

제대로 돌아가는 프로세스에 대해 개선을 할 기회를 주는 회사가 있는가?
 과연 제대로 돌아가는 프로세스인지를 항상 의심하고 개선해야 한다
 무엇이든 더 좋아질 수 있다. 예 : 5년 넘게 1시간씩 걸리던 작업을 1주일만에 1분에 끝내도록 고쳤다. 당연하다고 생각되는 것부터 찾아서 고쳐보자

계속 커 나가는 팀을 구성할 때 기존에 있던 사람들이 맡은 역할을 재분배하는 문제가 있다

근태(정시출근)는 기본이다

역량(그 사람의 능력)과 평가(목표 달성 여부)는 분명하게 구분짓자

단기 목표가 무엇인지를 분명하게 알 수 있게 해 주면, 팀장 역할 반은 한 거다

팀장도 피드백을 원한다
 내가 팀원들에게 하고 있는 일에 대해 팀원들이 만족해 하는가?
 마음에 들지 않는 팀장에게 왜 '이건 아닌거 같아요' 라고 말 하지 못하는가?
 그 사람이 나에 대한 평가를 하기 때문. 회사를 나갈 수 있는 사람이 올바를 얘기를 할 수 있다

기본적으로 관리자는 리팩토링을 싫어한다

워크샵에서 심리분석(MBTI 비슷한 거) 를 했더니 서로의 성향을 조금이나마 이해할 수 있는 계기가 되었다

== 6장 프로그래밍 프로젝트 ==

== 회고 ==
 기억 안 나는 게 약간씩 있네요. 덧붙여 주세요. [ParkPD]

[[Attachment(ps.png,width=500,caption='mindmap of programming group.')]]
