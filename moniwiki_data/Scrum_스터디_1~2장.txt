= 1장 스크럼을 시작하며 =
 * 스크럼의 유래
  * 1987년 일본에서 제품 개발 프로세스의 한 유영 설명을 위해 사용
  * 럭비의 전술대형 
   * http://static.guim.co.uk/sys-images/Sport/Pix/pictures/2008/05/01/Scrum1.jpg
  * 현실적응적이고 , 기민하며, 자기조직적이다. 쉴틈이 별로 없다

 * 스크럼 간략 소개
  * http://ambuj.files.wordpress.com/2008/03/scrum1.jpg
  * 제품백로그(Product Backlog) : 제품의 모든 요구사항을 우선순위에 따라 나열한 목록, 누구나 제품 백로그의 내용을 제안 할 수 있음
  * 제품 책임자(Product Owner) : 제품 백로그 항목들에 우선 순위를 부여 할 수 있는 사람
  * 스크럼팀 : 스크럼을 수행하는 작은교차기능(cross-functional)팀,자기 조직적(Self-organizing)이며 완전히 자율적이다.
  * 스프린트(Sprint) : 30일의 반복주기, 스크럼팀은 이 한주기 동안 개발가능한 만큼 제품 백로그를 선택한다., 스프린트를 반복적으로 수행하여 제품을 발전하게 됨
  * 스프린트 백로그(Sprint Backlog): 스프린트에서 수행할 테스크 목록, 스크럼팀은 스프린트 동안 스프린트 백로그를 관리해야한다.
  * 스크럼 마스터(Scrum Master) : 팀원들이 스크럼의 실천을 강제하고, 팀이 결정을 내리고 자원을 얻는데 도움을 준다, 스프린트 동안 팀은 아무런 외부의 방해를 받지않게 해야한다. 
  * 일일 스크럼(Daily Scrum) : 매일 진행되는 짤막한 현황회의
  * 스프린트 검토 회의 (Sprint Review Meeting): 팀과 관리자가 모여 스프린트린트 동안 개발된 제품 증분에 대해서 검토한다.
 * 스크럼 특징
  * 직설적이다
  * 부적절하고 성가신 관리 관행들을 날려버리고 업무만 집중하게 해준다.
  * 개발자들을 업무에 집중해서 재빨리 고품질의 제품을 만들도록 해준다.

= 2장 스크럼 준비 = 
 * ' 명시적인' 공정제어모델 
  사전에 잘정의된 입력들이 주어지면 '동일한' 결과물이 산출됨
  소프트웨어 산업은 많은 사고와 창조성을 요구하는 지식 집약적인 산업 
  명시적 방법론 사용시 통제력 상실과 불완전한 제품 생산

 * '경험주의적' 공정제어모델
  불완전하게 정의되어 예상못한 결과를 만드는 프로세스를 빈번하게 검사하고 적응 하는 방법 

 * 스크럼은 '경험주의적' 공정제어모텔을 바탕으로 하고 있다
  * 소란스런 프로젝트 예
    초기의 혼란스런 상황에서 스크럼을 적용해봄
    '가능한 것을 하라'의 원칙을 적용해 첫 스프린트의 목표를 선별함
    개발팀 스스로  다모여서 업무를 찾아내고 업무를 분배하였다.
    업무를 진행하면서 지속적으로 스프린트 목표를 달성 할 것인가를 같이 고민하였다.
    열흘뒤 개발의 실패의 느낌이 퍼짐-> 목표로 했던 사항중 가능한 부분만 선별하여 스프린 트 목표를 조정
    조절된 스프린트 목표를 달성하였다.
    자신감을 갖은 개발팀은 지속적으로 개발가능한 프로토타입을 만들어 내어 끝내는 솔루션을 완성 시킴
