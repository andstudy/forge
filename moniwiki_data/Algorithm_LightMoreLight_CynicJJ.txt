 * 최초 풀이는 10줄 정도, 아니 뭐 이렇게 쉬운 문제가? 라고 생각
 * 제출 해보니 시간 초과
 * 풋~ 간단히 최적화
 * 그래도 시간 초과
 * 어쭈구리? 열심히 최적화, 최초구현에 비해 9배 정도의 성능
 * 그래도 시간 초과, 씁숑구리
 * 반나절간 삽질
 * 마침내 깨닫게 되다. 현재 상태로는 이 문제를 풀지 못한다.
 * 콜롬버스의 달걀이 필요하다.
 * 해답은 어처구니 없을 정도로 간단하지 않을까?
 * 마음을 비우고 맥반석 달걀이나 먹으면서 생각해보자.

{{{
Public Class Light

	Function GetLastBulbStatus(ByVal bulbCount As UInteger) As Boolean
		Dim count As UInteger = 1		' 첫번째 반복에서 무조건 켜지기 때문

		Dim loopLimit As UInteger = bulbCount \ 2

		' 짝수 처리
		While (bulbCount And 1) = 0
			bulbCount >>= 1
			count += 1
			loopLimit >>= 1
		End While

		Dim n As UInteger = 3
		While n <= loopLimit
			If (bulbCount Mod n) = 0 Then
				bulbCount \= n
				count += 1
				loopLimit = bulbCount
			Else
				n += 2
			End If
		End While

		If count = 1 Then count += 1 ' count 가 여전히 1이면 자신이 소수라는 의미
		Return ((count And 1) = 1)
	End Function

End Class
}}}
